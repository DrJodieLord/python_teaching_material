ao <- available_outcomes()
#Load in available metabolite exposures:
data(metab_qtls)
#View the first few lines
head(metab_qtls)
# Load in available metabolite exposures:
data(metab_qtls)
# Remove the # from the head command below to view the first few lines of the data object
# head(metab_qtls)
tail(metab_qtls)
# What do you see?
#Extract XL.HDL.TG from the metab_qtls catalogue:
xl.hdl.tg_exp_dat <- format_metab_qtls(subset(metab_qtls, phenotype=="XL.HDL.TG"))
#View
head(xl.hdl.tg_exp_dat)
#Extract XL.HDL.TG from the metab_qtls catalogue:
xl.hdl.tg_exp_dat <- format_metab_qtls(subset(metab_qtls, phenotype=="XL.HDL.TG"))
#View the extracted information:
xl.hdl.tg_exp_dat
#View the information
head(subset(ao, select=c(trait, id)))
### !!!!! The below function creates a new file in your working directory called mrbase.oauth. If you are using R in a working directory that does not have write permissions then this command will fail, please navigate to a directory that does have write permissions!!!! ###
ao <- available_outcomes()
### !!!!! The below function creates a new file in your working directory called mrbase.oauth. If you are using R in a working directory that does not have write permissions then this command will fail, please navigate to a directory that does have write permissions!!!! ###
ao <- available_outcomes()
names(ao)
head(ao)
# What do you see?
#View the information
head(subset(ao, select=c(trait, id)))
#sub_ad1<-ao[which(ao$trait=="Alzheimer's disease"),]
#sub_ad<-ao[which(ao$id=="297"),]
#View first few traits available and their corresponding MR ID:
#head(subset(ao, select=c(trait, id)))
#Subset the ao datasframe to only rows where the trait = ALzheimer's Disease
sub_ad1<-ao[which(ao$trait=="Alzheimer's disease"),]
sub_ad1
#sub_ad<-ao[which(ao$id=="297"),]
# View first few traits available and their corresponding MR ID:
#head(subset(ao, select=c(trait, id)))
# Subset the ao datasframe to only rows where the trait = ALzheimer's Disease
#sub_ad1<-ao[which(ao$trait=="Alzheimer's disease"),]
# View the document - what do you see?
#sub_ad1
# There are a few dataset options available to us. Let's select the first dataset which is from Lambert / the IGAP consortium, and has a corresponding MR ID of 297:
sub_ad<-ao[which(ao$id=="297"),]
# Extract only the SNPs from this AD dataset which are also the IV SNPs for XL.HDL.TG. Name this
ad_out_dat <- extract_outcome_data ( snps = xl.hdl.tg_exp_dat$SNP, outcomes= sub_ad$id)
ad_out_dat
# Remove the # infront of the devtools command below to install MRInstruments, then load it using the library command and view the first few lines of the catalogue using the head command:
#devtools::install_github("MRCIEU/MRInstruments")
library(MRInstruments)
# Remove the # below to view the first few lines of the catalogue
#head(gwas_catalog)
head(metab_mqtls)
# Use the clump_data command to remove SNP instruments in high LD, retaining the most sig):
xl.hdl.tg_exp_dat <- clump_data(xl.hdl.tg_exp_dat)
# Harmonizing data using option 2 (action=2), and assigning it to new data object: dat
dat <- harmonise_data(
exposure_dat = xl.hdl.tg_exp_dat,
outcome_dat = ad_out_dat, action=2)
# View dat
dat
res <- mr(dat)
res
# Run MR analyses on harmonised data stored within dat object. Assign this to a data object named "res":
#res <- mr(dat)
# View the output:
res
# Annoyingly, even though IVW is the standard MR measure, MR-Base does not put this at the top of the dataframe as default. But you can specify 1) which order you want to view the method results in, and 2) which methods you specifically wish to view, by using the method_list() option. You can remove the # from the code below to see an example of this:
#res2 <- mr(dat, method_list=c("mr_ivw", "mr_egger_regression", "mr_weighted_median"))
#res2
#p3 <- mr_leaveoneout_plot(res_loo)
#p3[[1]]
res_single <- mr_singlesnp(dat2)
res_single
# Use mr_singlesnp on the dat data object to obtain an egger intercept value and its sig:
mr_singlesnp(dat, all_method="mr_two_sample_ml")
# Use mr_singlesnp on the dat data object to obtain an egger intercept value and its sig:
mr_singlesnp(dat, all_method="mr_two_sample_ml")
# Use mr_singlesnp on the dat data object to obtain an egger intercept value and its sig:
test<-mr_singlesnp(dat, all_method="mr_two_sample_ml")
test
#Generate scatter:
mr_scatter_plot(res, dat)
install.packages("ISLR")
library(ISLR)
help(package="ISLR")
install.packages("MASS")
gwd()
getwd()
setwd("/Users/jodielord/Documents/OneDrive/PGCert/StatisticalModelling_Lectures/"ASSESSMENT)
setwd("/Users/jodielord/Documents/OneDrive/PGCert/StatisticalModelling_Lectures/"ASSESSMENT"")
setwd("/Users/jodielord/Documents/OneDrive/PGCert/StatisticalModelling_Lectures/"ASSESSMENT")
setwd("/Users/jodielord/Documents/OneDrive/PGCert/StatisticalModelling_Lectures/"ASSESSMENT")
library(here)
pwd
getwd()
setwd("/Users/jodielord/Documents/OneDrive/PGCert/StatisticalModelling_Lectures/ASSESSMENT")
ls
getwd()
setwd("/Users/jodielord/Documents/OneDrive/PhD_stuff/Graduate Teaching Assistant/_YR2_BIGDATA_PYTHON/Session3"
)
getwd()
df<-read.csv("brain_size_clindata.csv", header=T)
head(df)
dim(df)
set.seed(0)
N<-20
dist1<-rnorm(N)
dist2<-rnorm(N,mean=5)
bimod<-c(dist1,dist2)
len(bimod)
count(bimod)
bimod
ggplot()+aes(bimod)+geom_histogram
sex<-c(rep(0,20), rep(1,20))
sex
sex<-c(rep(0,20), rep(1,20))
sex
test<-data.frame(sex, bmod)
test<-data.frame(sex, bimod)
head(test)
names(test)<-c("Sex", "CogTest")
ID<-c(1:200)
head(ID)
df1<-data.frame(ID, Sex, CogTest1)
set.seed(0)
N<-100
dist1<-rnorm(N)
dist2<-rnorm(N,mean=5)
CogTest1<-c(dist1,dist2)
CogTest1
Sex<-c(rep(0,100), rep(1,100))
ID<-c(1:200)
df1<-data.frame(ID, Sex, CogTest1)
head(df1)
set.seed(10)
N<-100
dist1<-rnorm(N)
dist2<-rnorm(N,mean=15)
CogTest2<-c(dist1,dist2)
CogTest2
library(ggplot2)
set.seed(10)
N<-100
dist1<-rnorm(N, 10)
dist2<-rnorm(N,mean=15)
CogTest2<-c(dist1,dist2)
ggplot() + aes(CogTest2)+ geom_histogram()
ggplot() + aes(CogTest1)+ geom_histogram()
set.seed(10)
N<-1000
dist1<-rnorm(N, 10)
dist2<-rnorm(N,mean=15)
CogTest2<-c(dist1,dist2)
ggplot() + aes(CogTest2)+ geom_histogram()
set.seed(0)
N<-1000
dist1<-rnorm(N)
dist2<-rnorm(N,mean=5)
CogTest1<-c(dist1,dist2)
ggplot() + aes(CogTest1)+ geom_histogram()
set.seed(10)
N<-1000
dist1<-rnorm(N)
dist2<-rnorm(N,mean=20)
SpeedComp<-c(dist1,dist2)
ggplot() + aes(SpeedComp)+ geom_histogram()
Sex<-c(rep(0,1000), rep(1,1000))
ID<-c(1:2000)
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df, "cognitive_scores.csv", row.names=F, col.names=T, quotes=F)
write.csv(df1, "cognitive_scores.csv", row.names=F, col.names=T, quotes=F)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=60)
dist2<-rnorm(N,mean=75)
Weight<-c(dist1,dist2)
ggplot() + aes(Weight)+ geom_histogram()
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=60)
dist2<-rnorm(N,mean=75)
Weight<-c(dist1,dist2)
ggplot() + aes(Weight)+ geom_histogram()
source('~/.active-rstudio-document', echo=TRUE)
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=60)
dist2<-rnorm(N,mean=62)
Weight<-c(dist1,dist2)
ggplot() + aes(Weight)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156)
dist2<-rnorm(N,mean=149)
Height<-c(dist1,dist2)
ggplot(Height) + aes(CogTest1)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156)
dist2<-rnorm(N,mean=149)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 5)
dist2<-rnorm(N,mean=149, 5)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 3)
dist2<-rnorm(N,mean=149, 3)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 2)
dist2<-rnorm(N,mean=149, 2)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 3)
dist2<-rnorm(N,mean=149, 4)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
set.seed(200)
N<-2000
MRI_Count<-rnorm(N)
ggplot() + aes(MRI_Count)+ geom_histogram()
Diagnosed1<-c(rep("yes",5), rep("No",5))
Diagnosed<-c(rep(Diagnosed, *100)
Diagnosed1<-c(rep("yes",5), rep("No",5))
Diagnosed<-c(rep(Diagnosed, Diagnosed*100)
)
Diagnosed1<-c(rep("yes",5), rep("No",5))
Diagnosed<-c(rep(Diagnosed1, Diagnosed1*100))
Diagnosed<-c(rep(Diagnosed1, 100))
tail(Diagnosed)
Diagnosed
Diagnosed1<-c(rep("yes",5), rep("No",5))
Diagnosed<-c(rep(Diagnosed1, 200))
Diagnosed
length(Diagnosed)
ID<-c(1:2000)
#Creating weight normal dist scores
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=60)
dist2<-rnorm(N,mean=62)
Weight<-c(dist1,dist2)
ggplot() + aes(Weight)+ geom_histogram()
#Creating height normal dist scores
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 3)
dist2<-rnorm(N,mean=149, 4)
Height<-c(dist1,dist2)
ggplot() + aes(Height)+ geom_histogram()
#Creating mri normal dist scores
set.seed(200)
N<-2000
MRI_Count<-rnorm(N)
ggplot() + aes(MRI_Count)+ geom_histogram()
Gender<-c(rep("Male",1000), rep("Female",1000))
Diagnosed1<-c(rep("yes",5), rep("No",5))
Diagnosed<-c(rep(Diagnosed1, 200))
length(Diagnosed)
df2<-data.frame(ID, Gender, Height, Weight, MRI_Count, Diagnosed)
head(df2)
write.csv(df2, "clinical_scores.csv", row.names=F, quote=F)
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTest1+7
}
CogTest2
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTest1[i]+7
}
CogTest2
set.seed(10)
N<-1000
dist1<-rnorm(N=24.5)
dist2<-rnorm(N,mean=19.2)
SpeedComp<-c(dist1,dist2)
set.seed(10)
N<-1000
dist1<-rnorm(N=24.5)
dist2<-rnorm(N,mean=19.2)
SpeedComp1<-c(dist1,dist2)
SpeedComp<-c()
for(i in 1:length(SpeedComp1)){
if SpeedComp1[i]<=25{
SpeedComp[i]<-SpeedComp1[i]-2
}
else{
SpeedComp[i]<-SpeedComp1[i]+5
}
}
SpeedComp<-c()
for(i in 1:length(SpeedComp1)){
if SpeedComp1[i]<=25{
SpeedComp[i]<-SpeedComp1[i]-2
}
else{
SpeedComp[i]<-SpeedComp1[i]+5
}
}
SpeedComp<-c()
for (i in 1:length(SpeedComp1)){
if SpeedComp1[i]<=25{
SpeedComp[i]<-SpeedComp1[i]-2
}
else{
SpeedComp[i]<-SpeedComp1[i]+5
}
}
SpeedComp<-c()
for (i in 1:length(SpeedComp1)){
if (SpeedComp1[i]<=25){
SpeedComp[i]<-SpeedComp1[i]-2
}
else{
SpeedComp[i]<-SpeedComp1[i]+5
}
}
SpeedComp
ggplot() + aes(SpeedComp)+ geom_histogram()
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
set.seed(10)
N<-1000
dist1<-rnorm(N, 10)
dist2<-rnorm(N,mean=15)
CogTest1<-c(dist1,dist2)
set.seed(10)
N<-1000
dist1<-rnorm(N, 10, 5)
dist2<-rnorm(N,mean=15, 5)
CogTesta<-c(dist1,dist2)
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTesta[i]+7
}
Sex<-c(rep(0,1000), rep(1,1000))
ID<-c(1:2000)
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
random<-rand(N)
set.seed(10)
N<-2000
rand<-rnorm(N, 2, 5)
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTest1[i]+rand
}
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTest1[i]+rand[i]
}
CogTest2
set.seed(50)
N<-1000
dist1<-rnorm(N, 10, 3)
dist2<-rnorm(N,mean=15, 3)
SpeedComp1<-c(dist1,dist2)
set.seed(50)
N<-1000
dist1<-rnorm(N, 10, 3)
dist2<-rnorm(N,mean=15, 3)
SpeedComp<-c(dist1,dist2)
Sex<-c(rep(0,1000), rep(1,1000))
ID<-c(1:2000)
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
set.seed(50)
N<-2000
dist1<-rnorm(N, 10, 3)
#dist2<-rnorm(N,mean=15, 3)
SpeedComp<-c(dist1,dist2)
#Creating cogtest2 normal dist scores
set.seed(50)
#Creating cogtest1 normal dist scores
set.seed(10)
set.seed(10)
CogTest2<-c()
Sex<-c(rep(0,1000), rep(1,1000))
Sex<-c(rep(0,1000), rep(1,1000))
Sex<-c(rep(0,1000), rep(1,1000))
ID<-c(1:2000)
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
set.seed(10)
N<-1000
dist1<-rnorm(N, 10, 3)
dist2<-rnorm(N,mean=15, 3)
CogTest1<-c(dist1, dist2)
set.seed(10)
N<-2000
rand<-rnorm(N, 2, 5)
CogTest2<-c()
for( i in 1:length(CogTest1)){
CogTest2[i]<-CogTest1[i]+rand[i]
}
set.seed(50)
N<-1000
dist1<-rnorm(N, 10, 3)
dist2<-rnorm(N,mean=15, 3)
SpeedComp<-c(dist1, dist2)
SpeedComp<-c()
for (i in 1:length(SpeedComp1)){
if (SpeedComp1[i]<=25){
SpeedComp[i]<-SpeedComp1[i]-2
}
else{
SpeedComp[i]<-SpeedComp1[i]-0.5
}
}
ggplot() + aes(SpeedComp)+ geom_histogram()
Sex<-c(rep(0,1000), rep(1,1000))
ID<-c(1:2000)
df1<-data.frame(ID, Sex, CogTest1, CogTest2, SpeedComp)
head(df1)
write.csv(df1, "cognitive_scores.csv", row.names=F, quote=F)
ID<-c(1:2000)
#Creating weight normal dist scores
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=69)
dist2<-rnorm(N,mean=62)
Weight<-c(dist1,dist2)
#ggplot() + aes(Weight)+ geom_histogram()
#Creating height normal dist scores
set.seed(20)
N<-1000
dist1<-rnorm(N, mean=156, 3)
dist2<-rnorm(N,mean=149, 4)
Height<-c(dist1,dist2)
Gender<-c(rep("Male",1000), rep("Female",1000))
df2<-data.frame(ID, Gender, Height, Weight, MRI_Count, Diagnosed)
head(df2)
write.csv(df2, "clinical_scores.csv", row.names=F, quote=F)
ggplot() + aes(Weight)+ geom_histogram()
set.seed(0)
N<-1000
dist1<-rnorm(N, mean=62)
dist2<-rnorm(N,mean=60)
Weight<-c(dist1,dist2)
ggplot() + aes(Weight)+ geom_histogram()
df2<-data.frame(ID, Gender, Height, Weight, MRI_Count, Diagnosed)
head(df2)
write.csv(df2, "clinical_scores.csv", row.names=F, quote=F)
head(df1)
mean(df1$CogTest2)
mean(df1$CogTest2 which df1$Sex==1)
set.seed(10)
N<-2000
CogTest1<-rnorm(N, 10, 4)
head(CodTest1)
head(CodTest1)
head(CogTest1)
CogTest1<-sort(CogTest1)
head(CogTest1)
set.seed(10)
N<-2000
CogTest1<-rnorm(N, 1000, 4)
CogTest1<-sort(CogTest1)
head(CogTest1)
tail(CogTest1)
2000-712
set.seed(10)
N<-2000
CogTest1<-rnorm(N, 100, 4)
CogTest1<-sort(CogTest1)
head(CogTest1)
tail(CogTest1)
set.seed(200)
N<-2000
CogTest2<-rnorm(N, 100, 4)
CogTest2<-sort(CogTest2)
head(CogTest2)
tail(CogTest2)
150+34
712-184
1288-320
D1<-c(rep(1, 34))
D2<-c(rep(1,150), rep(0,50))
D3<-c(rep(1,528), rep(0, 968))
D4<-c(rep(0, 270))
head(D2)
tail(D2)
D2<-sample(D2)
tail(D2)
head(D2)
D3<-sample(D3)
head(D3)
head(D3)
Diagnosis<-c(D1,D2,D3,D4)
head(Diagnosis)
head(Diagnosis)
tail(Diagnosis)
length(Diagnosis)
